{"version":3,"sources":["Alarm/Alarm.js","WorldClock.js","Timer.js","DrawerContainer.js","index.js","sounds/alarm_gentle.wav"],"names":["Alarm","useState","Date","alarmTime","setAlarmTime","alarmIsSet","setAlarmIsSet","alarmIntervalID","setAlarmIntervalID","Audio","alarmSoundGentle","alarmSound","checkAlarm","currentTime","hoursMatch","getHours","minutesMatch","getMinutes","secondsMatch","getSeconds","play","className","time","minutes","formatTime","utils","DateFnsUtils","TimePicker","margin","w","id","value","onChange","newTime","Button","onClick","clearInterval","paused","pause","setInterval","WorldClock","Timer","DrawerContainer","setCurrentView","iconNames","icons","views","Toolbar","List","map","icon","index","ListItem","button","key","ListItemIcon","ListItemText","primary","Divider","Welcome","App","currentView","CssBaseline","AppBar","position","Drawer","variant","classes","paper","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f5333689.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {MuiPickersUtilsProvider, TimePicker} from '@material-ui/pickers';\nimport { Button } from 'semantic-ui-react';\nimport alarmSoundGentle from '../sounds/alarm_gentle.wav';\nimport './Alarm.css';\n\nfunction Alarm() {\n\n  const [alarmTime, setAlarmTime] = useState(new Date());\n  const [alarmIsSet, setAlarmIsSet] = useState(false);\n  const [alarmIntervalID, setAlarmIntervalID] = useState();\n  const [alarmSound, setAlarmSound] = useState(new Audio(alarmSoundGentle));\n\n  const changeAlarmState = () => {\n    if(alarmIsSet) {\n      clearInterval(alarmIntervalID);\n      if(!alarmSound.paused) {\n        alarmSound.pause();\n        alarmSound.currentTime = 0;\n      }\n    } else {\n      setAlarmIntervalID(setInterval(() => {checkAlarm();}, 1000));\n    }\n    setAlarmIsSet(!alarmIsSet);\n  };\n\n  const checkAlarm = () => {\n    const currentTime = new Date();\n    const hoursMatch = (currentTime.getHours() === alarmTime.getHours());\n    const minutesMatch = (currentTime.getMinutes() === alarmTime.getMinutes());\n    const secondsMatch = (currentTime.getSeconds() === 0);\n    if(hoursMatch && minutesMatch && secondsMatch) {\n      alarmSound.play();\n    }\n  };\n\n  const formatTime = (time) => {\n    const minutes = time.getMinutes() < 10 ? '0' + time.getMinutes() : time.getMinutes();\n    if(time.getHours() === 0) {\n      return '12' + ':' + minutes + ' AM';\n    } else if(time.getHours() < 10) {\n      return '0' + time.getHours() + ':' + minutes + ' AM';\n    } else if(time.getHours() < 12) {\n      return time.getHours() + ':' + minutes + ' AM';\n    } else if(time.getHours() < 13) {\n      return time.getHours() + ':' + minutes + ' PM';\n    } else if(time.getHours() < 22) {\n      return '0' + (time.getHours()-12) + ':' + minutes + ' PM';\n    } else {\n      return (time.getHours()-12) + ':' + minutes + ' PM';\n    } \n  };\n\n  return ( \n    <div className='Alarm'>\n      <h1 className='ViewTitle'>Alarm Clock</h1>\n      <h2>The alarm will sound at {formatTime(alarmTime)}</h2>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>  \n        <TimePicker\n          className='AlarmTimePicker'\n          margin=\"normal\" w\n          id=\"time-picker\"\n          //label=\"The alarm will sound at\"\n          value={alarmTime}\n          onChange={(newTime) => setAlarmTime(newTime)}\n        />\n       </MuiPickersUtilsProvider>\n      <Button \n        className='AlarmActivationButton' \n        onClick={changeAlarmState}\n      >\n        {alarmIsSet ? \"Cancel Alarm\" : \"Set Alarm\"} \n      </Button>\n    </div>\n  );\n\n}\n\nexport default Alarm;","import React from 'react';\n\nfunction WorldClock() {\n  return (\n    <h1 className='ViewTitle'> World Clock </h1>\n  );\n}\n\nexport default WorldClock;","import React from 'react';\n\nfunction Timer() {\n  return (\n    <h1 className='ViewTitle'> Timer </h1>\n  );\n}\n\nexport default Timer;","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport TimerIcon from '@material-ui/icons/Timer';\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport PublicIcon from '@material-ui/icons/Public';\n\nimport Alarm from './Alarm/Alarm';\nimport WorldClock from './WorldClock';\nimport Timer from './Timer';\n\nfunction DrawerContainer({setCurrentView}) {\n  const iconNames = ['Alarm Clock', 'World Clock', 'Timer'];\n  const icons = [<AlarmIcon/>, <PublicIcon/>, <TimerIcon/>];\n  const views = [<Alarm/>, <WorldClock/>, <Timer/>];\n\n  return (\n    <div className='DrawerContainer'>\n      <Toolbar/>\n      <List>\n        {icons.map((icon, index) => (\n          <ListItem button onClick={() => setCurrentView(views[index])} key={iconNames[index]}>\n            <ListItemIcon> \n              {icon}\n            </ListItemIcon>\n            <ListItemText primary={iconNames[index]} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider/>\n    </div>\n  );\n}\n\nexport default DrawerContainer;","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport DrawerContainer from './DrawerContainer'; \n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\n\nfunction Welcome() {\n  return (\n    <div>\n      <h1 className='ViewTitle'> Welcome </h1>\n      <h2> Select the desired application from the left toolbar </h2>\n    </div>\n  );\n}\n\nfunction App() {\n  const [currentView, setCurrentView] = useState(<Welcome/>);\n\n  return (\n    <div className='App'> \n      <CssBaseline/>\n      <AppBar position=\"fixed\" className='AppBar'>\n        <Toolbar> \n          <h1> React Alarm Clock </h1> \n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className='Drawer'\n        variant=\"permanent\"\n        classes={{paper: 'DrawerPaper',}}\n      >\n        <DrawerContainer setCurrentView={setCurrentView}/>\n      </Drawer>\n      {currentView}\n    </div> \n  );\n}\n\n// ========================================\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/alarm_gentle.d9ce3c30.wav\";"],"sourceRoot":""}