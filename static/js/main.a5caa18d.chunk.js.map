{"version":3,"sources":["sounds/alarm_gentle.wav","index.js"],"names":["module","exports","App","state","currentTime","Date","alarmTime","hour","minute","alarmIsSet","alarmSound","Audio","alarmSoundGentle","this","setState","getHours","getMinutes","play","pause","className","Clock","updateCurrentTime","handleUpdateCurrentTime","Alarm","addHour","substractHour","addMinute","substractMinute","onClick","setAlarm","variant","color","disableElevation","React","Component","setInterval","props","h","m","s","getSeconds","time","style","position","left","marginLeft","width","height","padding","align","formatTime","disableRipple","minWidth","fontSize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5caa18d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm_gentle.d9ce3c30.wav\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport alarmSoundGentle from './sounds/alarm_gentle.wav'; \nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\n\nclass App extends React.Component {\n  state = {\n    currentTime: new Date(),\n    alarmTime: {\n      hour: 0,\n      minute: 0\n    },\n    alarmIsSet: false,\n    alarmSound: new Audio(alarmSoundGentle),\n  }\n\n  handleUpdateCurrentTime() {\n    this.setState({currentTime: new Date()});\n    if(this.state.alarmIsSet && (this.state.currentTime.getHours() == this.state.alarmTime.hour) && (this.state.currentTime.getMinutes() == this.state.alarmTime.minute)) {\n      this.state.alarmSound.play(); \n    }\n  }\n\n  addHour() {\n    let alarmTime = this.state.alarmTime;\n    alarmTime.hour == 23 ? alarmTime.hour = 0 : alarmTime.hour++;\n    this.setState({alarmTime: alarmTime});\n  }\n\n  substractHour() {\n    let alarmTime = this.state.alarmTime;\n    alarmTime.hour == 0 ? alarmTime.hour = 23 : alarmTime.hour--;\n    this.setState({alarmTime: alarmTime});\n  }\n\n  addMinute() {\n    let alarmTime = this.state.alarmTime;\n    alarmTime.minute === 59 ? alarmTime.minute = 0 : alarmTime.minute++;\n    this.setState({alarmTime: alarmTime});\n  }\n\n  substractMinute() {\n    let alarmTime = this.state.alarmTime;\n    alarmTime.minute === 0 ? alarmTime.minute = 59 : alarmTime.minute--;\n    this.setState({alarmTime: alarmTime});\n  }\n\n  setAlarm() {\n    this.setState({alarmIsSet: !this.state.alarmIsSet});\n    this.state.alarmSound.pause();\n    this.state.alarmSound.currentTime = 0;\n  }\n\n  render() {  \n    return (\n      <div className='app'>\n        <Clock \n          updateCurrentTime={() => this.handleUpdateCurrentTime()} \n          currentTime={this.state.currentTime}\n        />\n        <Alarm\n          alarmTime={this.state.alarmTime}\n          addHour={() => this.addHour()}\n          substractHour={() => this.substractHour()}\n          addMinute={() => this.addMinute()}\n          substractMinute={() => this.substractMinute()}\n        />\n        <Button \n          onClick={() => this.setAlarm()} \n          variant=\"contained\" \n          color=\"primary\" \n          disableElevation\n        >\n          {this.state.alarmIsSet ? \"Cancel alarm\" : \"Set alarm\"}\n        </Button>\n        <h1>{this.state.alarmIsSet ? \"Alarm is set!\" : \"\"}</h1>\n      </div>\n    );\n  }\n}\n\n\nclass Clock extends React.Component {\n\n  componentDidMount() {\n    setInterval(this.props.updateCurrentTime, 1000);\n  }\n\n  render() {\n    const h = this.props.currentTime.getHours();\n    const m = this.props.currentTime.getMinutes();\n    const s = this.props.currentTime.getSeconds();\n    return (\n      <div className=\"clock\">\n        <h1>{h < 10 ? '0' + h : h}:{m < 10 ? '0' + m : m}:{s < 10 ? '0' + s : s} {/*h < 12 ? ' AM' : ' PM'*/}</h1>\n      </div>\n    );\n  }\n}\n\n\nclass Alarm extends React.Component {\n\n  formatTime(time) {\n    return time < 10 ? '0' + time : time;\n  }\n\n  render() {\n    return(\n        <TableContainer className=\"alarm\" style={{position: 'relative', left: '50%', marginLeft: '-75px', width: '150px', height: '130px'}}>\n          <Table> \n            <TableRow>\n              <TableCell padding='none' align=\"right\"><h1>{this.formatTime(this.props.alarmTime.hour)}</h1></TableCell>\n              <TableCell padding='none' align=\"center\"><h1>:</h1></TableCell>\n              <TableCell padding='none' align=\"left\"><h1>{this.formatTime(this.props.alarmTime.minute)}</h1></TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell padding='none' align=\"right\"> \n                <Button className='add-hour' onClick={() => this.props.addHour()} disableRipple={true} style={{minWidth: '30px', height: '30px'}}>\n                  <AddIcon fontSize=\"small\"/>\n                </Button>\n              </TableCell>\n              <TableCell padding='none' align=\"center\"></TableCell>\n              <TableCell padding='none' align=\"left\"> \n                <Button className='add-minute' onClick={() => this.props.addMinute()} disableRipple={true} style={{minWidth: '30px', height: '30px'}}>\n                  <AddIcon fontSize=\"small\"/>\n                </Button>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell padding='none' align=\"right\"> \n                <Button className='substract-hour' onClick={() => this.props.substractHour()} disableRipple={true} style={{minWidth: '30px', height: '30px'}}>\n                  <RemoveIcon fontSize=\"small\"/>\n                </Button>        \n              </TableCell>\n              <TableCell padding='none' align=\"center\"></TableCell>\n              <TableCell padding='none' align=\"left\"> \n                <Button className='substract-minute' onClick={() => this.props.substractMinute()} disableRipple={true} style={{minWidth: '30px', height: '30px'}}>\n                  <RemoveIcon fontSize=\"small\"/>\n                </Button>        \n              </TableCell>\n            </TableRow>\n          </Table>\n        </TableContainer>\n    );\n  }\n}\n  \n\nconst Sound = ( { soundFileName, ...rest } ) => (\n  <audio autoPlay src={`sounds/${soundFileName}`} {...rest} />\n)\n\n\n// ========================================\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}