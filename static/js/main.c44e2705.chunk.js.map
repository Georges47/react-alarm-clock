{"version":3,"sources":["sounds/alarm_gentle.wav","Alarm.js","index.js"],"names":["module","exports","Alarm","useState","Date","alarmTime","setAlarmTime","alarmIsSet","setAlarmIsSet","alarmIntervalID","setAlarmIntervalID","Audio","alarmSoundGentle","alarmSound","checkAlarm","currentTime","hoursMatch","getHours","minutesMatch","getMinutes","secondsMatch","getSeconds","play","className","utils","DateFnsUtils","TimePicker","margin","w","id","value","onChange","newTime","Button","onClick","clearInterval","paused","pause","setInterval","App","ReactDOM","render","document","getElementById"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,0C,iOC6D5BC,MAtDf,WAAkB,IAAD,EAEmBC,mBAAS,IAAIC,MAFhC,mBAERC,EAFQ,KAEGC,EAFH,OAGqBH,oBAAS,GAH9B,mBAGRI,EAHQ,KAGIC,EAHJ,OAI+BL,qBAJ/B,mBAIRM,EAJQ,KAISC,EAJT,OAKqBP,mBAAS,IAAIQ,MAAMC,MALxC,mBAKRC,EALQ,KAoBTC,GApBS,KAoBI,WACjB,IAAMC,EAAc,IAAIX,KAClBY,EAAcD,EAAYE,aAAeZ,EAAUY,WACnDC,EAAgBH,EAAYI,eAAiBd,EAAUc,aACvDC,EAA6C,IAA7BL,EAAYM,aAC/BL,GAAcE,GAAgBE,GAC/BP,EAAWS,SAIf,OACE,yBAAKC,UAAU,SACb,uDAA6BlB,EAAUY,WAAa,IAAMZ,EAAUc,cACpE,kBAAC,IAAD,CAAyBK,MAAOC,KAC9B,kBAACC,EAAA,EAAD,CACEH,UAAU,kBACVI,OAAO,SAASC,GAAC,EACjBC,GAAG,cAEHC,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAa1B,EAAa0B,OAGxC,kBAACC,EAAA,EAAD,CACEV,UAAU,wBACVW,QAtCmB,WACpB3B,GACD4B,cAAc1B,GACVI,EAAWuB,SACbvB,EAAWwB,QACXxB,EAAWE,YAAc,IAG3BL,EAAmB4B,aAAY,WAAOxB,MAAgB,MAExDN,GAAeD,KA8BVA,EAAa,eAAiB,eCjDvC,SAASgC,IACP,OACE,yBAAKhB,UAAU,OACb,kBAAC,EAAD,OAQNiB,IAASC,OACP,kBAACF,EAAD,MACAG,SAASC,eAAe,W","file":"static/js/main.c44e2705.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm_gentle.d9ce3c30.wav\";","import React, {useState} from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {MuiPickersUtilsProvider, TimePicker} from '@material-ui/pickers';\nimport { Button } from 'semantic-ui-react';\nimport alarmSoundGentle from './sounds/alarm_gentle.wav';\nimport './Alarm.css';\n\nfunction Alarm() {\n\n  const [alarmTime, setAlarmTime] = useState(new Date());\n  const [alarmIsSet, setAlarmIsSet] = useState(false);\n  const [alarmIntervalID, setAlarmIntervalID] = useState();\n  const [alarmSound, setAlarmSound] = useState(new Audio(alarmSoundGentle));\n\n  const changeAlarmState = () => {\n    if(alarmIsSet) {\n      clearInterval(alarmIntervalID);\n      if(!alarmSound.paused) {\n        alarmSound.pause();\n        alarmSound.currentTime = 0;\n      }\n    } else {\n      setAlarmIntervalID(setInterval(() => {checkAlarm();}, 1000));\n    }\n    setAlarmIsSet(!alarmIsSet);\n  };\n\n  const checkAlarm = () => {\n    const currentTime = new Date();\n    const hoursMatch = (currentTime.getHours() === alarmTime.getHours());\n    const minutesMatch = (currentTime.getMinutes() === alarmTime.getMinutes());\n    const secondsMatch = (currentTime.getSeconds() === 0);\n    if(hoursMatch && minutesMatch && secondsMatch) {\n      alarmSound.play();\n    }\n  };\n\n  return (\n    <div className='Alarm'>\n      <h2>The alarm will sound at {alarmTime.getHours() + ':' + alarmTime.getMinutes()}</h2>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>  \n        <TimePicker\n          className='AlarmTimePicker'\n          margin=\"normal\" w\n          id=\"time-picker\"\n          //label=\"The alarm will sound at\"\n          value={alarmTime}\n          onChange={(newTime) => setAlarmTime(newTime)}\n        />\n      </MuiPickersUtilsProvider>\n      <Button \n        className='AlarmActivationButton' \n        onClick={changeAlarmState}\n      >\n        {alarmIsSet ? \"Cancel Alarm\" : \"Set Alarm\"} \n      </Button>\n    </div>\n  );\n\n}\n\nexport default Alarm;","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Alarm from './Alarm';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Alarm/>\n    </div> \n  );\n}\n\n// ========================================\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}